[
  "logsim/test_devices.py::test_get_device",
  "logsim/test_devices.py::test_find_devices",
  "logsim/test_devices.py::test_make_device",
  "logsim/test_devices.py::test_make_device_gives_errors[(AND1_ID, new_devices.AND, 17)-new_devices.INVALID_QUALIFIER]",
  "logsim/test_devices.py::test_make_device_gives_errors[(SW1_ID, new_devices.SWITCH, None)-new_devices.NO_QUALIFIER]",
  "logsim/test_devices.py::test_make_device_gives_errors[(X1_ID, new_devices.XOR, 2)-new_devices.QUALIFIER_PRESENT]",
  "logsim/test_devices.py::test_make_device_gives_errors[(D_ID, D_ID, None)-new_devices.BAD_DEVICE]",
  "logsim/test_devices.py::test_make_device_gives_errors[(CL_ID, new_devices.CLOCK, 0)-new_devices.INVALID_QUALIFIER]",
  "logsim/test_devices.py::test_make_device_gives_errors[(CL_ID, new_devices.CLOCK, 10)-new_devices.NO_ERROR]",
  "logsim/test_devices.py::test_make_device_gives_errors[(X2_ID, new_devices.XOR)-new_devices.DEVICE_PRESENT]",
  "logsim/test_devices.py::test_get_signal_name",
  "logsim/test_devices.py::test_get_signal_ids",
  "logsim/test_devices.py::test_set_switch",
  "logsim/test_monitors.py::test_make_monitor",
  "logsim/test_monitors.py::test_make_monitor_gives_errors",
  "logsim/test_monitors.py::test_remove_monitor",
  "logsim/test_monitors.py::test_get_signal_names",
  "logsim/test_monitors.py::test_record_signals",
  "logsim/test_monitors.py::test_get_margin",
  "logsim/test_monitors.py::test_reset_monitors",
  "logsim/test_monitors.py::test_display_signals",
  "logsim/test_network.py::test_get_connected_output",
  "logsim/test_network.py::test_get_input_signal",
  "logsim/test_network.py::test_get_output_signal",
  "logsim/test_network.py::test_check_network",
  "logsim/test_network.py::test_make_connection",
  "logsim/test_network.py::test_make_connection_gives_error[(I1, I1, OR1_ID, I2)-network.DEVICE_ABSENT]",
  "logsim/test_network.py::test_make_connection_gives_error[(OR1_ID, I2, OR1_ID, I2)-network.INPUT_TO_INPUT]",
  "logsim/test_network.py::test_make_connection_gives_error[(SW1_ID, None, OR1_ID, None)-network.OUTPUT_TO_OUTPUT]",
  "logsim/test_network.py::test_make_connection_gives_error[(SW1_ID, I1, OR1_ID, I2)-network.PORT_ABSENT]",
  "logsim/test_network.py::test_make_connection_gives_error[(SW2_ID, None, OR1_ID, I2)-network.NO_ERROR]",
  "logsim/test_network.py::test_make_connection_gives_error[(OR1_ID, I2, SW2_ID, None)-network.NO_ERROR]",
  "logsim/test_network.py::test_make_connection_gives_error[(SW1_ID, None, OR1_ID, I1)-network.INPUT_CONNECTED]",
  "logsim/test_network.py::test_execute_xor",
  "logsim/test_network.py::test_execute_non_xor_gates[AND1_ID-switch_outputs0-LOW-devices.AND]",
  "logsim/test_network.py::test_execute_non_xor_gates[AND1_ID-switch_outputs1-HIGH-devices.AND]",
  "logsim/test_network.py::test_execute_non_xor_gates[NAND1_ID-switch_outputs2-LOW-devices.NAND]",
  "logsim/test_network.py::test_execute_non_xor_gates[NAND1_ID-switch_outputs3-HIGH-devices.NAND]",
  "logsim/test_network.py::test_execute_non_xor_gates[OR1_ID-switch_outputs4-LOW-devices.OR]",
  "logsim/test_network.py::test_execute_non_xor_gates[OR1_ID-switch_outputs5-HIGH-devices.OR]",
  "logsim/test_network.py::test_execute_non_xor_gates[NOR1_ID-switch_outputs6-LOW-devices.NOR]",
  "logsim/test_network.py::test_execute_non_xor_gates[NOR1_ID-switch_outputs7-HIGH-devices.NOR]",
  "logsim/test_network.py::test_execute_non_gates",
  "logsim/test_network.py::test_oscillating_network",
  "logsim/test_parse.py::test_parse",
  "logsim/test_parse.py::test_invalid_keywords",
  "logsim/test_parse.py::test_invalid_order",
  "logsim/test_parse.py::test_miss_semi",
  "logsim/test_parse.py::test_overinput",
  "logsim/test_parse.py::test_wrong_switch_input",
  "logsim/test_parse.py::test_keyword_name",
  "logsim/test_parse.py::test_output_to_output",
  "logsim/test_parse.py::test_input_to_input",
  "logsim/test_parse.py::test_excess_inputs",
  "logsim/test_parse.py::test_no_connect",
  "logsim/test_scanner.py::test_new_scanner",
  "logsim/test_scanner.py::test_get_position",
  "logsim/test_scanner.py::testquery"
]